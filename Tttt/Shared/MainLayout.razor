@inherits LayoutComponentBase
@inject NavigationManager navigationManager
@inject Tttt.Authentication.CustomStateProvider _customStateProvider
@inject NavigationManager _NavigationManager
@using Tttt.Services
@using System.Security.Claims;
@using Blazored.Toast.Configuration
<div class="full_container">
    <div class="inner_container">
        <NavMenu />
    </div>
    <div id="content">
        <!-- topbar -->
        <div class="topbar">
            <nav class="navbar navbar-expand-lg navbar-light">
                <div class="full">
                    <button type="button" id="sidebarCollapse" class="sidebar_toggle"><i class="fa fa-bars"></i></button>
                    <div class="logo_section">
                        <a href="/"><img class="img-responsive" src="/pluto-1.0.0/images/logo/logo.png" alt="#" /></a>
                    </div>
                    <div class="right_topbar">
                        <div class="icon_info">

                            <ul>
                                <li><a href="#"><i class="fa fa-bell-o"></i><span class="badge">2</span></a></li>
                                <li><a href="#"><i class="fa fa-question-circle"></i></a></li>
                                <li><a href="#"><i class="fa fa-envelope-o"></i><span class="badge">3</span></a></li>
                            </ul>
                            <ul class="user_profile_dd">
                                <li>
                                    <a class="dropdown-toggle" data-toggle="dropdown"><img class="img-responsive rounded-circle" src="/pluto-1.0.0/images/layout_img/user_img.jpg" alt="#" />
                                    <span class="name_user">Mahmoud Mostafa</span>
                                   
                                    @*<AuthorizeView>
                                        <Authorized>
                                            <span class="name_user">@context.User.Identity.Name</span>
                                        </Authorized>
                                        <NotAuthorized>
                                            <span class="name_user">Johan Doe</span>
                                        </NotAuthorized>
                                    </AuthorizeView>*@
                                    </a>
                                    <div class="dropdown-menu">
                                        @*<AuthorizeView Roles="Teacher, Student, StudentAffaris, Secratria">
                                            <Authorized>
                                                <a class="dropdown-item" @onclick="ViewProfile">My Profile</a>
                                            </Authorized>
                                        </AuthorizeView>*@
                                        <a class="dropdown-item" href="settings.html">Settings</a>
                                        <a class="dropdown-item" href="help.html">Help</a>
                                        <a class="dropdown-item" @*@onclick="@Logout"*@><span>Log Out</span> <i class="fa fa-sign-out"></i></a>
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </nav>
        </div>
        <!-- end topbar -->
        <!-- dashboard inner -->
        <div class="midde_cont">
            <div class="container-fluid">
                <div class="row column_title">
                    <div class="col-md-12">
                        <div class="page_title">
                            <h2 class="text-center text-info">Schools Management System</h2>

                        </div>
                    </div>
                </div>

            </div>
            @Body
            <!-- footer -->
            <div class="container-fluid">
                <div class="footer">
                    <p>
                        Copyright © 2023 Designed by El7etan<br><br>
                        @*Distributed By: <a href="https://themewagon.com/">ThemeWagon</a>*@
                    </p>
                </div>
            </div>
        </div>
        <!-- end dashboard inner -->
    </div>
</div>
@code{
    //[CascadingParameter]
    //Task<AuthenticationState> AuthenticationState { get; set; }

    //protected override async Task OnAfterRenderAsync(bool firstRender)
    //{
    //    if (!(await AuthenticationState).User.Identity.IsAuthenticated)
    //    {
    //        string email = await _customStateProvider.GetemailAsync();
    //        string password = await _customStateProvider.GetpaswordAsync();
    //        if (string.IsNullOrEmpty(email) || string.IsNullOrEmpty(password))
    //        {
    //            string uri = navigationManager.ToBaseRelativePath(navigationManager.Uri);
    //            if (string.IsNullOrWhiteSpace(uri))
    //                navigationManager.NavigateTo("/LoginPage");
    //        }
    //        else
    //        {
    //            await _customStateProvider.Login(new Schools.DTO.DTO.LoginDto() { Email = email, Password = password, RememberMe = true });
    //        }

    //    }
    //}
    //async Task Logout()
    //{
    //    //await _customStateProvider.Logout();
    //    //navigationManager.NavigateTo("/LoginPage");
    //}
















    //[Inject]

    //public IDepartmentDataService DepartmentDataService { get; set; }
    //public IEmployeeDataService EmployeeDataService { get; set; }
    //[Parameter]
    //public string _userId { get; set; }
    //[Inject]
    //public Tttt.Authentication.CustomStateProvider _authenticationStateProvider { get; set; }
    //public List<Claim> AA { get; set; }
    //[Parameter]
    //public List<string> roles { get; set; }
    //protected async Task getUserIdAsync()
    //{
    //    var user = (await _authenticationStateProvider.GetAuthenticationStateAsync()).User;
    //    var UserId = user.FindFirst(u => u.Type.Contains("nameidentifier"))?.Value;
    //    var User = (await _authenticationStateProvider.GetAuthenticationStateAsync()).User;
    //    AA = (await _authenticationStateProvider.GetAuthenticationStateAsync()).User.Claims.ToList();

    //    roles = ((ClaimsIdentity)User.Identity).Claims
    //       .Where(c => c.Type == ClaimTypes.Role)
    //       .Select(c => c.Value).ToList();

    //    _userId = UserId;
    //}


    //protected async void ViewProfile()
    //{
    //    await getUserIdAsync();
    //    for (int i = 0; i < roles.Count(); i++)
    //    {
    //        string roleName = roles[i];
    //        switch (roleName)
    //        {
    //            case "Teacher":
    //                _NavigationManager.NavigateTo($"/TeacherProfile/{_userId.ToString()}");
    //                break;
    //            case "Student":
    //                _NavigationManager.NavigateTo($"/StudentAdresses/{_userId.ToString()}");
    //                _NavigationManager.NavigateTo("/StudentAdresses/4ca21881-bf32-46f1-b6d9-994d13bb49ed");
    //                break;
    //            case "Parent":
    //                _NavigationManager.NavigateTo($"/StudentAdresses/{_userId.ToString()}");
    //                _NavigationManager.NavigateTo("/StudentAdresses/4ca21881-bf32-46f1-b6d9-994d13bb49ed");
    //                break;
    //            case "StudentAffaris":
    //            case "Secratria":
    //                var SSN = (await EmployeeDataService.GetAll()).Where(s => s.User_Id == _userId).FirstOrDefault().EmployeeSSN;
    //                _NavigationManager.NavigateTo($"EmployeeProfile/{SSN}");
    //                break;
    //            default:
    //                _NavigationManager.NavigateTo("/TestAuth");
    //                break;
    //        }

    //    }
    //}





























}



    <BlazoredToasts Position="ToastPosition.BottomRight" />